# 🧪 ما هو اختبار النظام (System Testing)؟

اختبار النظام هو مرحلة **التحقق من عمل النظام الكامل بعد دمج جميع الوحدات البرمجية**.  
الهدف منه هو التأكد أن البرنامج يعمل **من البداية إلى النهاية (End-to-End)** وفقًا لمتطلبات المستخدم والعميل.

يتم هذا الاختبار على المنتج الجاهز بالكامل — أي بعد دمج البرمجيات، الواجهات، والمكونات الخارجية (سواء كانت برمجية أو عتادية).

---

## 🎯 الغرض من اختبار النظام
- التحقق من **تكامل كل أجزاء البرنامج** بعد دمجها.  
- التأكد من أن **النظام يلبي المتطلبات الوظيفية وغير الوظيفية**.  
- فحص تجربة المستخدم الكاملة.  
- التحقق من **تدفق البيانات بين الوحدات** دون أخطاء.  

---

## 🧩 مكانه في هرم الاختبار البرمجي
اختبار النظام يأتي بعد **Integration Testing** وقبل **Acceptance Testing**:

1. **Unit Testing** – اختبار كل وحدة على حدة.  
2. **Integration Testing** – اختبار التواصل بين الوحدات.  
3. **System Testing** – اختبار النظام الكامل.  
4. **Acceptance Testing** – اختبار المنتج من قِبل المستخدم النهائي.

---

## ⚫️ العلاقة مع Black Box Testing
اختبار النظام يُعتبر من **اختبارات الصندوق الأسود (Black Box Testing)**،  
أي أنه يركّز على **سلوك النظام من الخارج** بدون النظر إلى الكود الداخلي.

---

## 🧠 ما الذي يتم التحقق منه؟
- كل مدخل (Input) يعطي المخرجات (Outputs) الصحيحة.  
- تكامل النظام مع الأجهزة أو البرامج الخارجية.  
- تجربة المستخدم الكاملة وسهولة الاستخدام.  
- مدى توافق النظام مع بيئة التشغيل الحقيقية.

---

## 🧾 أنواع اختبار النظام الشائعة

هناك أكثر من **50 نوعًا** من اختبارات النظام، لكن أهمها:

### 1. **Usability Testing (قابلية الاستخدام)**
يقيس سهولة استخدام النظام ووضوح الواجهات ومدى راحة المستخدم في التعامل معه.

### 2. **Load Testing (اختبار التحميل)**
يفحص أداء النظام عند التعامل مع عدد كبير من المستخدمين أو العمليات.

### 3. **Regression Testing (الاختبار الرجعي)**
يتأكد أن التعديلات أو الإضافات الجديدة **لم تُحدث أخطاء في وظائف سابقة**.

### 4. **Recovery Testing (اختبار الاسترداد)**
يتحقق من قدرة النظام على **التعافي بعد الأعطال أو التوقف المفاجئ**.

### 5. **Migration Testing (اختبار الترحيل)**
يضمن إمكانية **نقل النظام من بيئة إلى أخرى** (مثل من خوادم قديمة إلى جديدة) دون مشاكل.

### 6. **Functional Testing (اختبار الوظائف)**
يتأكد أن كل وظيفة أو ميزة تعمل كما هو متوقع **وفق متطلبات العميل**.

### 7. **Hardware/Software Testing**
يركّز على التفاعل بين **البرمجيات والأجهزة** (مثل نظام يعمل على أجهزة معينة أو حساسات).

---

## 🧮 العوامل التي تحدد أنواع الاختبارات المستخدمة
- **حجم الشركة أو المشروع** (شركات كبيرة مقابل مشاريع صغيرة).  
- **الوقت المتاح للاختبار**.  
- **الموارد المتوفرة** (أدوات، بيئات اختبار، أجهزة).  
- **خبرة فريق الاختبار**.  
- **الميزانية المتاحة**.

---

## ✅ الخلاصة
اختبار النظام هو المرحلة التي **تحاكي تجربة المستخدم الواقعية**،  
ويتم فيها تقييم النظام **ككل وليس كأجزاء منفصلة**.  
هي الخطوة التي تضمن أن المنتج النهائي **جاهز للإطلاق**، ويعمل كما تم التخطيط له في بيئة حقيقية.

